buildscript {
    ext {
        springBootVersion = '<%= version.springboot %>.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = '<%= project.name %>'
    version = '<%= project.version %>.0-SNAPSHOT'
}
sourceCompatibility = <%= version.java %>
targetCompatibility = <%= version.java %>

repositories {
    mavenCentral()
}


dependencies {
<%
  var dependencies = all.config.tags.gradle.dependencies;
  each(dependencies, function(dependencies2) {
   each(dependencies2, function(dependency, dependencyName) {
    if(dependency === true) {
%>
    compile("org.springframework.boot:spring-boot-starter-<%=dependencyName%>")
<%
    }
   })
  })
%>
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-<%= version.java %>'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}
